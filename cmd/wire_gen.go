// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/billykore/go-service-tmpl/internal/http/handler"
	"github.com/billykore/go-service-tmpl/internal/http/router"
	"github.com/billykore/go-service-tmpl/internal/storage/repo"
	"github.com/billykore/go-service-tmpl/pkg/service"
	"github.com/billykore/go-service-tmpl/pkg/utils/config"
	"github.com/billykore/go-service-tmpl/pkg/utils/db/postgres"
	"github.com/billykore/go-service-tmpl/pkg/utils/log"
	"github.com/billykore/go-service-tmpl/pkg/utils/validation"
	"github.com/labstack/echo/v4"
)

// Injectors from wire.go:

func initApp(cfg *config.Configs) *app {
	logger := log.NewLogger()
	echoEcho := echo.New()
	validator := validation.New()
	db := postgres.New(cfg)
	greetRepo := repo.NewGreetRepo(db)
	greetService := service.NewGreetService(logger, greetRepo)
	greetHandler := handler.NewGreetHandler(validator, greetService)
	routerRouter := router.New(cfg, logger, echoEcho, greetHandler)
	mainApp := newApp(routerRouter)
	return mainApp
}
